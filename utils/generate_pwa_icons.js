const sharp = require('sharp');
const fs = require('fs');
const path = require('path');

// –†–∞–∑–º–µ—Ä—ã –∏–∫–æ–Ω–æ–∫ –¥–ª—è PWA
const iconSizes = [
  { size: 72, name: 'icon-72.png' },
  { size: 96, name: 'icon-96.png' },
  { size: 128, name: 'icon-128.png' },
  { size: 144, name: 'icon-144.png' },
  { size: 152, name: 'icon-152.png' },
  { size: 192, name: 'icon-192.png' },
  { size: 384, name: 'icon-384.png' },
  { size: 512, name: 'icon-512.png' }
];

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∫–æ–Ω–æ–∫
async function generatePWAIcons(svgPath, outputDir = './icons') {
  try {
    // –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –∏–∫–æ–Ω–æ–∫ –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    if (!fs.existsSync(outputDir)) {
      fs.mkdirSync(outputDir, { recursive: true });
    }

    console.log('–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º PNG –∏–∫–æ–Ω–∫–∏ –∏–∑ SVG...');

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–∫–æ–Ω–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞
    for (const icon of iconSizes) {
      const outputPath = path.join(outputDir, icon.name);

      await sharp(svgPath)
        .resize(icon.size, icon.size, {
          fit: 'contain',
          background: { r: 0, g: 0, b: 0, alpha: 0 } // –ü—Ä–æ–∑—Ä–∞—á–Ω—ã–π —Ñ–æ–Ω
        })
        .png()
        .toFile(outputPath);

      console.log(`‚úì –°–æ–∑–¥–∞–Ω–∞ –∏–∫–æ–Ω–∫–∞: ${icon.name} (${icon.size}x${icon.size})`);
    }

    console.log('\nüéâ –í—Å–µ –∏–∫–æ–Ω–∫–∏ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã!');

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø—Ä–∏–º–µ—Ä manifest.json
    generateManifestExample(outputDir);

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∫–æ–Ω–æ–∫:', error);
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–∏–º–µ—Ä–∞ manifest.json
function generateManifestExample(outputDir) {
  const manifest = {
    "name": "My PWA App",
    "short_name": "PWA App",
    "theme_color": "#000000",
    "background_color": "#ffffff",
    "display": "standalone",
    "start_url": "/",
    "icons": iconSizes.map(icon => ({
      "src": `icons/${icon.name}`,
      "sizes": `${icon.size}x${icon.size}`,
      "type": "image/png",
      "purpose": "any maskable"
    }))
  };

  const manifestPath = path.join(outputDir, '..', 'manifest.json');
  fs.writeFileSync(manifestPath, JSON.stringify(manifest, null, 2));
  console.log('üìÑ –°–æ–∑–¥–∞–Ω –ø—Ä–∏–º–µ—Ä manifest.json');
}

// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞
const svgFilePath = process.argv[2] || './icon.svg';
const outputDirectory = process.argv[3] || './icons';

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ SVG —Ñ–∞–π–ª–∞
if (!fs.existsSync(svgFilePath)) {
  console.error(`‚ùå SVG —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: ${svgFilePath}`);
  console.log('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: node generate-pwa-icons.js <–ø—É—Ç—å-–∫-svg> [–ø–∞–ø–∫–∞-–≤—ã–≤–æ–¥–∞]');
  process.exit(1);
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é
generatePWAIcons(svgFilePath, outputDirectory);
