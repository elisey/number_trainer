version: "3"

vars:
  PROJECT_NAME: number-trainer
  PYTHON_CMD: python3
  UV_CMD: uv

tasks:
  default:
    desc: "Показать доступные команды"
    cmds:
      - task --list

  # Установка и настройка
  install:
    desc: "Установить все зависимости проекта"
    cmds:
      - "{{.UV_CMD}} sync"
    sources:
      - pyproject.toml
    generates:
      - uv.lock

  install-dev:
    desc: "Установить зависимости для разработки"
    cmds:
      - "{{.UV_CMD}} sync --all-groups"
    sources:
      - pyproject.toml
    generates:
      - uv.lock

  # Запуск приложения
  run:
    desc: "Запустить GUI приложение"
    cmds:
      - "{{.UV_CMD}} run {{.PYTHON_CMD}} main.py"

  run-console:
    desc: "Запустить консольную версию тренажера"
    cmds:
      - "{{.UV_CMD}} run {{.PYTHON_CMD}} -m src.number_trainer.cli.console"

  run-web:
    desc: "Запустить веб-сервер (браузерная версия)"
    cmds:
      - "{{.UV_CMD}} run {{.PYTHON_CMD}} web_main.py"

  # Тестирование
  test:
    desc: "Запустить все тесты"
    deps: [install-dev]
    cmds:
      - "{{.UV_CMD}} run pytest tests/ -v"
    sources:
      - "src/**/*.py"
      - "tests/**/*.py"

  test-cov:
    desc: "Запустить тесты с покрытием кода"
    deps: [install-dev]
    cmds:
      - "{{.UV_CMD}} run pytest tests/ --cov=src/number_trainer --cov-report=term-missing --cov-report=html"
    sources:
      - "src/**/*.py"
      - "tests/**/*.py"
    generates:
      - htmlcov/

  test-watch:
    desc: "Запустить тесты в режиме наблюдения"
    deps: [install-dev]
    cmds:
      - "{{.UV_CMD}} run pytest tests/ -v --tb=short -x"
    watch: true
    sources:
      - "src/**/*.py"
      - "tests/**/*.py"

  # Качество кода
  lint:
    desc: "Проверить код линтерами"
    cmds:
      - task: ruff
      - task: mypy

  ruff:
    desc: "Проверить код ruff"
    deps: [install-dev]
    cmds:
      - "{{.UV_CMD}} run ruff check --fix src/ tests/ main.py demo.py"

  mypy:
    desc: "Проверить код mypy"
    deps: [install-dev]
    cmds:
      - "{{.UV_CMD}} run mypy --package number_trainer --ignore-missing-imports"
      - "{{.UV_CMD}} run mypy main.py demo.py --ignore-missing-imports"
  
  format:
    desc: "Отформатировать код"
    deps: [install-dev]
    cmds:
      - "{{.UV_CMD}} run ruff format src/ tests/ main.py demo.py"

  format-check:
    desc: "Проверить форматирование кода"
    deps: [install-dev]
    cmds:
      - "{{.UV_CMD}} run ruff format --check src/ tests/ main.py demo.py"
      - "{{.UV_CMD}} run ruff check src/ tests/ main.py demo.py"

  # CI/CD команды
  ci:
    desc: "Запустить все проверки как в CI"
    cmds:
      - task: format-check
      - task: lint
      - task: test-cov

  # Очистка
  clean:
    desc: "Очистить временные файлы"
    cmds:
      - rm -rf __pycache__
      - rm -rf .pytest_cache
      - rm -rf htmlcov
      - rm -rf .coverage
      - rm -rf *.pyc
      - rm -rf .mypy_cache
      - rm -rf .ruff_cache
      - rm -rf .task
      - rm -rf dist

  clean-all:
    desc: "Полная очистка включая виртуальное окружение"
    cmds:
      - task: clean
      - rm -rf .venv/
      - rm -f uv.lock

  # Сборка и развертывание
  build:
    desc: "Собрать проект"
    cmds:
      - "{{.UV_CMD}} build"
    sources:
      - "*.py"
      - pyproject.toml
    generates:
      - dist/
