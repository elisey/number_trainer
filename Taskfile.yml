version: "3"

vars:
  PROJECT_NAME: number-trainer
  PYTHON_CMD: python3
  UV_CMD: uv

tasks:
  default:
    desc: "Show available commands"
    cmds:
      - task --list

  # Installation and setup
  install:
    desc: "Install all project dependencies including dev"
    cmds:
      - "{{.UV_CMD}} sync --all-groups"
    sources:
      - pyproject.toml
    generates:
      - uv.lock

  install-hooks:
    desc: "Install pre-commit hooks"
    deps: [install]
    cmds:
      - "{{.UV_CMD}} run pre-commit install"

  # Application launch
  run:
    desc: "Launch GUI application"
    cmds:
      - "{{.UV_CMD}} run {{.PYTHON_CMD}} main.py"

  run-console:
    desc: "Launch console version of trainer"
    cmds:
      - "{{.UV_CMD}} run {{.PYTHON_CMD}} -m src.number_trainer.cli.console"

  run-web:
    desc: "Launch web server (browser version)"
    cmds:
      - "{{.UV_CMD}} run {{.PYTHON_CMD}} web_main.py"

  # Testing
  test:
    desc: "Run tests with code coverage"
    deps: [install]
    cmds:
      - "{{.UV_CMD}} run pytest tests/ --cov=src/number_trainer --cov-report=term-missing --cov-report=html"
    sources:
      - "src/**/*.py"
      - "tests/**/*.py"
    generates:
      - htmlcov/

  test-watch:
    desc: "Run tests in watch mode"
    deps: [install]
    cmds:
      - "{{.UV_CMD}} run pytest tests/ -v --tb=short -x"
    watch: true
    sources:
      - "src/**/*.py"
      - "tests/**/*.py"

  # Code quality
  lint:
    desc: "Check code with linters"
    deps: [install]
    cmds:
      - task: ruff
      - task: mypy

  ruff:
    desc: "Check code with ruff"
    deps: [install]
    cmds:
      - "{{.UV_CMD}} run ruff check --fix src/ tests/ main.py web_main.py"

  mypy:
    desc: "Check code with mypy"
    deps: [install]
    cmds:
      - "{{.UV_CMD}} run mypy --package number_trainer --ignore-missing-imports"
      - "{{.UV_CMD}} run mypy main.py web_main.py --ignore-missing-imports"

  format:
    desc: "Format code"
    deps: [install]
    cmds:
      - "{{.UV_CMD}} run ruff format src/ tests/ main.py web_main.py"
      - "{{.UV_CMD}} run ruff check --fix src/ tests/ main.py web_main.py"

  format-check:
    desc: "Check code formatting"
    deps: [install]
    cmds:
      - "{{.UV_CMD}} run ruff format --check src/ tests/ main.py web_main.py"
      - "{{.UV_CMD}} run ruff check src/ tests/ main.py web_main.py"

  checks:
    desc: "Run code quality checks only"
    deps: [install]
    cmds:
      - task: format-check
      - task: lint
      - task: test

  # CI/CD commands
  ci:
    desc: "Run all checks as in CI"
    deps: [install-hooks]
    cmds:
      - "{{.UV_CMD}} run pre-commit run --all-files"

  # Cleanup
  clean:
    desc: "Clean temporary files"
    cmds:
      - rm -rf __pycache__
      - rm -rf .pytest_cache
      - rm -rf htmlcov
      - rm -rf .coverage
      - rm -rf *.pyc
      - rm -rf .mypy_cache
      - rm -rf .ruff_cache
      - rm -rf .task
      - rm -rf dist
      - rm -rf .pre-commit

  clean-all:
    desc: "Full cleanup including virtual environment"
    cmds:
      - task: clean
      - rm -rf .venv/
